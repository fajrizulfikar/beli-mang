on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # This enables manual triggers

name: AWS ECR push

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: thorumr-repository
        IMAGE_TAG: latest
        COMMIT_SHA: ${{ github.sha }}
      run: |
        # Build the docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA .

    - name: Delete latest tag in ECR
      run: |
        aws ecr batch-delete-image --repository-name thorumr-repository --image-ids imageTag=latest || true

    - name: Push the images to Amazon ECR
      run: |
        echo "Pushing image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "Pushing image: $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA"
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}

    - name: Force new deployment on ECS
      run: |
        aws ecs update-service --cluster ${{ secrets.AWS_CLUSTER }} --service ${{ secrets.AWS_ECS_SERVICE }} --force-new-deployment